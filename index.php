<?php
  /**
   * Test web server for mod_rewrite compatibility. The HTTP_MOD_REWRITE
   * constant is set in the .htaccess or Nginx configuartion.
   *
   * @return bool
   */

  function checkForModRewrite(){
    if(array_key_exists('HTTP_MOD_REWRITE', $_SERVER)) {
      return true;
    } else {
      return false;
    }
  }

  /**
   * Returns the full script URL
   *
   * @return string $url
   */

  function returnFullURL(){
    return ((empty($_SERVER['HTTPS']) || $_SERVER['HTTPS'] === 'off') ? 'http://' : 'https://').$_SERVER['SERVER_NAME'] . dirname($_SERVER['REQUEST_URI']);
  }

  /**
   * Function to construct the project URL based on the return status of
   * checkForModRewrite(). If true the function will return a pretty URL
   * otherwise it'll return a URL with GET parameters.
   *
   * @param string $project
   * @return string $url
   */

  // Function to construct the project URL, based on checkForModRewrite()
  function prepareProjectURL($project){
    if (checkForModRewrite()) {
      return returnFullURL().$project.'.html';
    } else {
      return returnFullURL().'project.php/?alias='.$project;
    }
  }

  /**
   * Return object with data loaded from JSON files data/github.json
   * and data/info.json
   *
   * @return obj $data
   */

  function loadJSONData(){
    // Load and store portfolio data
    $info_file = file_get_contents("data/info.json");
    $github_file = file_get_contents("data/github.json");

    // Convert from JSON
    $info_json = json_decode($info_file, true);
    $github_json = json_decode($github_file, true);

    // Assign to variables
    $data['info'] = $info_json['information'];
    $data['projects'] = $info_json['projects'];
    $data['github'] = $github_json['projects'];

    // Return data
    return $data;
  }

  // This file is generated by Composer
  require_once 'vendor/autoload.php';

  // Create new Plates instance and map template folders
  $templates = new League\Plates\Engine('templates');

  // Create router instance
  $router = new \Klein\Klein();

  // Load JSON data into variable
  $data = loadJSONData();

  // // Check if GET parameter "project" is set, then use "projects" template
  // if(isset($_GET['project'])) {
  //   $parser = new \cebe\markdown\Markdown();
  //   $alias = $_GET['project'];

  //   // Check if project actually exists
  //   if (isset($data['projects'][$alias])) {
  //     echo $templates->render('pages/projects', compact('data', 'alias', 'parser'));
  //   } else {
  //     // Doesn't exist, render error page
  //     echo $templates->render('pages/error', compact('data', 'alias', 'parser'));
  //   }
  // // Otherwise use "home" template
  // } else {
  //   echo $templates->render('pages/home', compact('data'));
  // }

  $router->respond('GET', '/', function () {
    echo $templates->render('pages/home', compact('data'));
  });

  $router->dispatch();
?>
